services:
  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    container_name: rabbitmq-ai
    networks: [cmlre_net_ai]

  db:
    image: postgres:13-alpine
    container_name: postgres_db-ai
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=cmlre_data
    volumes: [postgres_data_ai:/var/lib/postgresql/data/]
    networks: [cmlre_net_ai]

  model-builder:
    build:
      context: .
      dockerfile: ./ai_model/Dockerfile   # <-- youâ€™ll need to create this file
    container_name: model_builder-ai
    command: python train_model.py   # runs once, trains the model
    volumes:
      - model_volume:/app/model
      - ./ai_model:/app/data
    networks: [cmlre_net_ai]

  ai_worker:
    build:
      context: .
      dockerfile: ./workers/Dockerfile.workers
    container_name: ai_worker-ai
    command: python ai_worker.py
    depends_on:
      - rabbitmq
      - db
      - model-builder
    volumes:
      - model_volume:/app/model
    networks: [cmlre_net_ai]
    environment:
      - RABBITMQ_HOST=rabbitmq
      - POSTGRES_HOST=db
      - POSTGRES_DB=cmlre_data
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  api:
    build:
      context: .
      dockerfile: ./api/Dockerfile
    container_name: cmlre_api-ai
    ports: ["8001:8000"]
    depends_on: [rabbitmq, db]
    networks: [cmlre_net_ai]
    environment:
      - RABBITMQ_HOST=rabbitmq
      - POSTGRES_HOST=db
      - POSTGRES_DB=cmlre_data
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  workers:
    build:
      context: .
      dockerfile: ./workers/Dockerfile.workers
    container_name: cmlre_workers-ai
    command: python otolith_worker_ai.py
    depends_on: [rabbitmq, db]
    networks: [cmlre_net_ai]
    environment:
      - RABBITMQ_HOST=rabbitmq
      - POSTGRES_HOST=db
      - POSTGRES_DB=cmlre_data
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  frontend:
    image: nginx:alpine
    container_name: cmlre_frontend-ai
    ports: ["8081:80"]
    volumes:
      - ./frontend/index_ai.html:/usr/share/nginx/html/index.html
    networks: [cmlre_net_ai]

networks:
  cmlre_net_ai:
    driver: bridge

volumes:
  postgres_data_ai:
  model_volume:
