services:
  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    container_name: rabbitmq-final
    networks: [cmlre_net_final]

  db:
    image: postgres:13-alpine
    container_name: postgres_db-final
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=cmlre_data
    volumes: [postgres_data_final:/var/lib/postgresql/data/]
    networks: [cmlre_net_final]

  model-builder:
    build:
      context: .
      dockerfile: ./ai_model/Dockerfile
    container_name: model_builder-final
    command: python train_model.py
    volumes:
      - model_volume_final:/app/model
      - ./ai_model:/app # Mount the whole directory to copy code and data
    networks: [cmlre_net_final]

  ai_worker:
    build:
      context: .
      dockerfile: ./workers/Dockerfile.workers
    container_name: ai_worker-final
    command: python ai_worker.py
    depends_on: [rabbitmq, db, model-builder]
    volumes:
      - model_volume_final:/app/model
      - ./workers:/app # Mount the worker scripts
    networks: [cmlre_net_final]
    environment:
      - RABBITMQ_HOST=rabbitmq
      - POSTGRES_HOST=db
      - POSTGRES_DB=cmlre_data
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  api:
    build:
      context: .
      dockerfile: ./api/Dockerfile
    container_name: cmlre_api-final
    ports: ["8002:8000"]
    depends_on: [rabbitmq, db]
    networks: [cmlre_net_final]
    environment:
      - RABBITMQ_HOST=rabbitmq
      - POSTGRES_HOST=db
      - POSTGRES_DB=cmlre_data
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./data/sample_training_data.csv:/app/sample_training_data.csv # Mount the sample data into the container

  workers:
    build:
      context: .
      dockerfile: ./workers/Dockerfile.workers
    container_name: cmlre_workers-final
    command: python otolith_worker_ai.py
    depends_on: [rabbitmq, db]
    volumes: ['./workers:/app'] # Mount the worker scripts
    networks: [cmlre_net_final]
    environment:
      - RABBITMQ_HOST=rabbitmq
      - POSTGRES_HOST=db
      - POSTGRES_DB=cmlre_data
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  taxonomy_worker:
    build:
      context: .
      dockerfile: ./workers/Dockerfile.workers
    container_name: taxonomy_worker-final
    command: python taxonomy_worker.py
    depends_on: [rabbitmq, db]
    volumes: ['./workers:/app'] # Mount the worker scripts
    networks: [cmlre_net_final]
    environment:
      - RABBITMQ_HOST=rabbitmq
      - POSTGRES_HOST=db
      - POSTGRES_DB=cmlre_data
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  frontend:
    image: nginx:alpine
    container_name: cmlre_frontend-final
    ports: ["8082:80"]
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks: [cmlre_net_final]

networks:
  cmlre_net_final:
    driver: bridge

volumes:
  postgres_data_final:
  model_volume_final:
