version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    container_name: rabbitmq-final
    networks: [cmlre_net_final]

  db:
    image: postgres:13-alpine
    container_name: postgres_db-final
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=cmlre_data
    volumes: [postgres_data_final:/var/lib/postgresql/data/]
    networks: [cmlre_net_final]

  model-builder:
    build:
      context: ./ai_model
      dockerfile_inline: |
        FROM python:3.9-slim
        WORKDIR /app
        COPY requirements.txt .
        RUN pip install --no-cache-dir -r requirements.txt
        COPY . .
    container_name: model_builder-final
    command: python train_model.py
    volumes: [model_volume_final:/app/model, ./ai_model:/app/data]
    networks: [cmlre_net_final]

  ai_worker:
    build:
      context: ./workers
      dockerfile_inline: |
        FROM python:3.9-slim
        WORKDIR /app
        COPY requirements_ai.txt .
        RUN pip install --no-cache-dir -r requirements_ai.txt
        COPY ai_worker.py .
    container_name: ai_worker-final
    command: python ai_worker.py
    depends_on: [rabbitmq, db, model-builder]
    volumes: [model_volume_final:/app/model]
    networks: [cmlre_net_final]
    environment:
      - RABBITMQ_HOST=rabbitmq
      - POSTGRES_HOST=db
      - POSTGRES_DB=cmlre_data
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  api:
    build:
      context: ./api
      dockerfile_inline: |
        FROM python:3.9-slim
        WORKDIR /app
        COPY requirements_db.txt .
        RUN pip install --no-cache-dir -r requirements_db.txt
        COPY main_final.py .
        CMD ["uvicorn", "main_final:app", "--host", "0.0.0.0", "--port", "8000"]
    container_name: cmlre_api-final
    ports: ["8002:8000"]
    depends_on: [rabbitmq, db]
    networks: [cmlre_net_final]
    environment:
      - RABBITMQ_HOST=rabbitmq
      - POSTGRES_HOST=db
      - POSTGRES_DB=cmlre_data
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  workers:
    build:
      context: ./workers
      dockerfile_inline: |
        FROM python:3.9-slim
        WORKDIR /app
        COPY requirements_ai.txt .
        RUN pip install --no-cache-dir -r requirements_ai.txt
        COPY otolith_worker_ai.py .
    container_name: cmlre_workers-final
    command: python otolith_worker_ai.py
    depends_on: [rabbitmq, db]
    networks: [cmlre_net_final]
    environment:
      - RABBITMQ_HOST=rabbitmq
      - POSTGRES_HOST=db
      - POSTGRES_DB=cmlre_data
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  frontend:
    image: nginx:alpine
    container_name: cmlre_frontend-final
    ports: ["8082:80"]
    volumes:
      - ./frontend/index_final.html:/usr/share/nginx/html/index.html
    networks: [cmlre_net_final]

networks:
  cmlre_net_final:
    driver: bridge

volumes:
  postgres_data_final:
  model_volume_final:
